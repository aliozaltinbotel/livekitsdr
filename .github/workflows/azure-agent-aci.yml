name: Deploy Agent to Azure Container Instances

on:
  push:
    branches:
      - main
    paths:
      - 'agent/**'
      - '.github/workflows/azure-agent-aci.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: livekitsdracr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push container image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: livekitsdracr.azurecr.io/livekitsdr-agent:latest
          file: ./agent/Dockerfile
          context: ./agent

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Instances
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Delete existing container if it exists
            az container delete \
              --resource-group livekitsdr-rg \
              --name livekitsdr-agent-container \
              --yes || true
            
            # Create new container instance
            az container create \
              --resource-group livekitsdr-rg \
              --name livekitsdr-agent-container \
              --image livekitsdracr.azurecr.io/livekitsdr-agent:latest \
              --registry-login-server livekitsdracr.azurecr.io \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password ${{ secrets.ACR_PASSWORD }} \
              --environment-variables \
                LIVEKIT_URL="${{ secrets.LIVEKIT_URL }}" \
                LIVEKIT_API_KEY="${{ secrets.LIVEKIT_API_KEY }}" \
                LIVEKIT_API_SECRET="${{ secrets.LIVEKIT_API_SECRET }}" \
                SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
                SUPABASE_KEY="${{ secrets.SUPABASE_KEY }}" \
              --cpu 1 \
              --memory 1.5 \
              --restart-policy Always \
              --os-type Linux \
              --location eastus

      - name: Show deployment status
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az container show \
              --resource-group livekitsdr-rg \
              --name livekitsdr-agent-container \
              --query "{Status:instanceView.state, Events:instanceView.events[*].{message:message, count:count}}"