name: Deploy Agent to Azure Container Instances

on:
  push:
    branches:
      - main
    paths:
      - 'agent/**'
      - '.github/workflows/azure-agent-aci.yml'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file from secrets
        working-directory: ./agent
        run: |
          cat > .env << EOF
          # LiveKit Cloud credentials
          LIVEKIT_URL=${{ secrets.LIVEKIT_URL }}
          LIVEKIT_API_KEY=${{ secrets.LIVEKIT_API_KEY }}
          LIVEKIT_API_SECRET=${{ secrets.LIVEKIT_API_SECRET }}
          
          # AI service credentials
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          DEEPGRAM_API_KEY=${{ secrets.DEEPGRAM_API_KEY }}
          CARTESIA_API_KEY=${{ secrets.CARTESIA_API_KEY }}
          
          # Google Calendar configuration
          GOOGLE_SERVICE_ACCOUNT_KEY=/app/botelai-d95567fc3ae3.json
          GOOGLE_CALENDAR_ID=primary
          
          # Optional: Supabase credentials
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
          EOF

      - name: Create Google service account JSON from secret
        working-directory: ./agent
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}' > botelai-d95567fc3ae3.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: livekitsdracr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push container image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: livekitsdracr.azurecr.io/livekitsdr-agent:latest
          file: ./agent/Dockerfile
          context: ./agent

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Instances
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            # Delete existing container if it exists
            az container delete \
              --resource-group livekitsdr-rg \
              --name livekitsdr-agent-container \
              --yes || true
            
            # Wait a moment for deletion to complete
            sleep 10
            
            # Create new container instance
            # The container will use .env file included in the Docker image
            az container create \
              --resource-group livekitsdr-rg \
              --name livekitsdr-agent-container \
              --image livekitsdracr.azurecr.io/livekitsdr-agent:latest \
              --registry-login-server livekitsdracr.azurecr.io \
              --registry-username ${{ secrets.ACR_USERNAME }} \
              --registry-password "${{ secrets.ACR_PASSWORD }}" \
              --cpu 1 \
              --memory 1.5 \
              --restart-policy Always \
              --os-type Linux \
              --location eastus

      - name: Show deployment status
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az container show \
              --resource-group livekitsdr-rg \
              --name livekitsdr-agent-container \
              --query "{Status:instanceView.state, Events:instanceView.events[*].{message:message, count:count}}"